name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - c_compiler: "clang-18"
            cxx_compiler: "clang++-18"
            os: ubuntu-24.04
          - c_compiler: "clang"
            cxx_compiler: "clang++"
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      # - name: Set up MSVC environment
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          curl -L -o ninja-linux.zip https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-linux.zip
          unzip ninja-linux.zip -d bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Ninja (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl -L -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-win.zip
          unzip ninja-win.zip -d bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Configure
        run: cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }}

      - name: Build
        run: cmake --build build

      - name: Test
        run: ctest --test-dir build --output-on-failure -j 2